#!bin/bash sh
#
#

# Env
echo -e "Start kernel build script..."
export token=######
export chat_id=#####
export ARCH=arm64
export KBUILD_BUILD_USER="Najahi"
export KBUILD_BUILD_HOST="🅱️rickport devloopers"
export PATH="$HOME/toolchain/bin:${PATH}"

# Required for gpg sign
export GPG_TTY=$(tty)

# Compile plox
function compile() {
export HASH=$(git log --pretty=format:'%h' -1)
    make -s -C "$(pwd)" ${1} ${2} O=out LLVM=1 chips_defconfig
    make -C "$(pwd)" ${1} ${2} O=out LLVM=1
}

# Push
function pushtg() {
    find out/arch/arm64/boot/dts/vendor/qcom -name '*.dtb' -exec cat {} + > $HOME/AnyKernel3/dtb
    cp out/arch/arm64/boot/Image $HOME/AnyKernel3/
    pushd $HOME/AnyKernel3
    zip -r9q unsigned.zip *
    java -jar $HOME/scripts/bin/zipsigner-3.0.jar \
        unsigned.zip \
        Chips-OOS_OP9Pro-Alpha-"$(date +'%H%M-%d%m%y')-${HASH}"-signed.zip
    curl --silent --output /dev/null -F document=@"$(echo Chips-*.zip)" "https://api.telegram.org/bot$token/sendDocument" \
        -F chat_id="$chat_id"
    rm -rf *.zip dtb Image
    popd
}

# Send some file to tg
function sendtg() {
   curl --silent --output /dev/null -F document=@"${1}" \
   "https://api.telegram.org/bot$token/sendDocument" \
   -F chat_id="$chat_id"
   echo -e "Sent!"
}

# Regen it
function regen() {
   make O=out vendor/chips_defconfig
   make O=out savedefconfig
   mv out/defconfig arch/arm64/configs/vendor/chips_defconfig
   echo -e "Done..."
}
